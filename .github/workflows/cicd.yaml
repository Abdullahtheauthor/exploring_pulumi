name: Build Docker Container

on:
  push:
    paths:
      - 'web/index.html'  

env:
    AWS_REGION : eu-central-1 
    ECR_REPOSITORY: nginx_server           # set this to your Amazon ECR repository name
    ECS_SERVICE: service-1e4f730                 # set this to your Amazon ECS service name
    ECS_CLUSTER: cluster-abef79a	                 # set this to your Amazon ECS cluster name
    ECS_TASK_DEFINITION: .aws/task-definition.json 
    # set this to the path to your Amazon ECS task definition
                                                 # file, e.g. .aws/task-definition.json
    CONTAINER_NAME: my-service           # set this to the name of the container in the
                                                 # containerDefinitions section of your task definition

# Permission can be added at job level or workflow level    
permissions:
    id-token: write   # This is required for requesting the JWT
    contents: read    # This is required for actions/checkout
jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v3
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::155966277798:role/my-github-actions-role #change to reflect your IAM roleâ€™s ARN
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}
    # Hello from AWS: WhoAmI
    - name: Sts GetCallerIdentity
      run: |
        aws sts get-caller-identity


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: nginx_server
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./web/.
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT



    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
